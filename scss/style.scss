// Обнуление ==============================================================================
@import '_nullstyle.scss';
// ========================================================================================



// Общие стили ============================================================================

// ========================================================================================



// Функции ================================================================================
// Определение функции toRem
@function toRem($value) {
	// Базовый размер шрифта (обычно 16px)
	$baseFontSize: 16;
	// Вычисление значения в rem
	@return ($value / $baseFontSize) * 1rem;
}

// ========================================================================================



// Шрифты =================================================================================
@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;600;700;800&display=swap');
//@import url('https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500&family=Plus+Jakarta+Sans:wght@400;600;700;800&display=swap');
// ========================================================================================
// Шрифты по умолчанию ====================================================================
$fontFamily: 'Plus Jakarta Sans';
// $fontSize: toRem(18); 
//  где (16 px) розмер шрифта по умолчанию с макета
// ========================================================================================



// Переменные =============================================================================
$mainColor: #545971; // цвет шрифта по умолчанию
$darckColor: #171921;
$bgColor: #142257;
$bgCollorSemi: #1F3584;
$bgCollorLite: #15B2F5;
// ========================================================================================



// Настройки адаптивной сетки =============================================================
$minWidth: 320; // Минимальная ширина страницы
$maxWidth: 1920; // Ширина полотна (макета)
$maxWidthContainer: toRem(1440); // Ширина ограничивающего контейнера
$containerPadding: toRem(30); // Отступ от контейнера по 15 слева и справа
$containerWidth: $maxWidthContainer + $containerPadding; // Ширина срабатывания первого брекпоинта
// Брейк-поинты------------------------------------------------------------------------------
// $pc: em($containerWidth);
$pc: $containerWidth;
// $tablet: em(991.98);
$tablet: toRem(991.98);
// $mobile: em(767.98);
$mobile: toRem(767.98);
// $mobileSmall: em(479.98);
$mobileSmall: toRem(479.98);
// ========================================================================================



// Миксины ================================================================================
// adaptiveValue
@mixin adaptiveValue($property, $pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$addMobSize: $addSize + $addSize * 0.7;

	@media (max-width: 767px) {
		#{$property}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
	}
	
	@media (min-width: 767px) {
		#{$property}: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
	}
}
// ========================================================================================



// ========================================================================================
// Обобщенные блоки заголовки и т.д. ===========================================================
.block-header {
	display: grid;
	gap: toRem(24);

	// .block-header--center
	&--center {
		text-align: center;
	}
	// .block-header--inline
	&--inline {
		grid-template-columns: minmax(auto, toRem(586)) minmax(auto, toRem(613));
		justify-content: space-between;
		align-items: end;
		gap: toRem(24);
	}
	// .block-header__title
	&__title {
		color: $darckColor;
		@include adaptiveValue("font-size", 52, 32);
		font-weight: 700;
		line-height: 1.2;
		// &:not(:last-child) {margin-bottom: toRem(24);}
	}

	// .block-header__title--big
	&__title--big {
			@include adaptiveValue("font-size", 64, 44);
			font-weight: 800;
	}

	// .block-header__title--white
	&__title--white {
		color: #fff;
	}

	// .block-header__text
	&__text {
		p{
			line-height: 1.55;
		}
	}
}
// ========================================================================================
// ========================================================================================



// Общие блоки ============================================================================
body {
	font-family: $fontFamily;
	@include adaptiveValue("font-size",18 ,16);
	color: $mainColor;
	// background-color: #15B2F5;
}
.wrapper {
	// max-width: toRem(1920);
	// margin: 0 auto;
}
[class*=__main-container] {
	// max-width: calc(toRem(1920) - toRem(320));
	// margin: 0 auto;
	// padding: 0 toRem(15);
}
// ========================================================================================


// ========================================================================================
// HEADER==================================================================================
.header {
	background-color: $bgColor;
	position: fixed;
	width: 100%;
	top: 0;
	z-index: 50;
	// .header__container
	&__header-container{
		max-width: calc(toRem(1920) - toRem(320));
		margin: 0 auto;
		padding: 0 toRem(15);
		min-height: toRem(80);
		display: grid;
		grid-template-columns: toRem(170) 1fr toRem(170);
		align-items: center;
		gap: toRem(15);
		padding-top: toRem(10);
		padding-bottom: toRem(10);
		@media (max-width: $mobile) {
			min-height: toRem(55);
			grid-template-columns: auto auto;
			justify-content: space-between;
		}
	}

	// .header__logo
	&__logo {
		position: relative;
		z-index: 5;
	}

	// .header__menu
	&__menu {}


&__schedule {
	justify-self: end;
	color: #fff;
	font-weight: 700;
	line-height: 1.33;
	display: flex;
	align-items: center;
	gap: toRem(10);	
	&::before {
		content: "";
		background-color: #FF5E5E;
		border-radius: 50%;
		width: toRem(12);
		height: toRem(12);
		flex: 0 0 toRem(12);
	}
}
@media (max-width: $mobile) {
	&__schedule-old {
		display: none;
	}
}
	&__schedule-new {
		display: flex;
		justify-content: center;
		padding: toRem(30) toRem(15) toRem(30) toRem(15);
	@media (min-width: $mobile) {
		display: none;
	}
	}

}
.menu {
	justify-self: center;
	// .menu__burger
	&__burger {}

	// .menu__body
	&__body {
		@media (max-width: $mobile) {
			padding: toRem(100) toRem(15) toRem(30) toRem(15);
			overflow: auto;
			display: flex;
			flex-direction: column;
			position: fixed;
			width: 100%;
			height: 100%;
			top: 0;	
			left: 100%;
			background-color: $bgCollorSemi;
			transition: all 0.3s ease 0s;
			&::before {
				content: "";
				position: fixed;
				width: 100%;
				height: toRem(55);
				top: 0;
				left: 100%;
				z-index: 2;
				background-color: $bgColor;
			}
			&.menu-open {
				left: 0;
				&::before {
					left: 0;
				}
			}
		}
	}


	// .menu__list
	&__list {
		display: flex;
		justify-content: center;
		flex-wrap: wrap;
		row-gap: toRem(3);
		@include adaptiveValue("column-gap", 57, 5);
		@media (max-width: $mobile) {
			// padding: toRem(120) toRem(15) toRem(30) toRem(15);
			font-size: toRem(28);
			flex-direction: column;
			align-items:center;
			row-gap: toRem(30);
			flex: 1 1 auto;
			justify-content: start;
		}
	}

	// .menu__item
	&__item {}

	// .menu__link
	&__link {
		color: #fff;
		font-weight: 700;
		line-height: 1.33;
		@media (any-hover: hover) {
			&:hover {
				text-decoration: underline;
			}
		}
	}
}

.burger-menu {
	display: none;
	@media (max-width: $mobile) { 
		display: block;
		position: relative;
		width: toRem(30);
		height: toRem(18);
		z-index: 5;
		@media (any-hover: none) {
			cursor: default;
		}
		span,
		&::before,
		&::after {
			content: "";
			transition: all 0.3s ease 0s;
			right: 0;
			position: absolute;
			width: 100%;
			height: toRem(2);
			background-color: #fff;
		}
		&::before {
			top: 0;
		}
		&::after {
			bottom: 0;
		}
		span {
			top: calc(50% - toRem(1));
		}
		&.menu-open {
			span {
				transform: scale(0);
			}

			&::before,
			&::after {}

			&::before {
				top: calc(50% - toRem(1));
				transform: rotate(-45deg);
			}

			&::after {
				bottom: calc(50% - toRem(1));
				transform: rotate(45deg);
			}
		}
	}
}
// HEADER==================================================================================
// ========================================================================================


// ========================================================================================
// MAIN====================================================================================
.page {}
// ========================================================================================
// HERO====================================================================================
.hero {
	background-color: $bgCollorLite;
	width: 100%;
	&__hero-container {
		max-width: toRem(1920);
		padding: toRem(80) toRem(15) toRem(60) toRem(15);
		margin: 0 auto;
		display: grid;
		grid-template-columns: 21.8% 1fr 21.8%;

	}

	// .hero__image
	&__image {
		width: 100%;

		& img {
			border-radius: 24px;
			overflow: hidden;

			max-width: 100%;

		}

	}

	// .hero__contant
	&__content {
		// grid-column: 2;
		text-align: center;
	}

	// .hero__block-header
	&__block-header {}
}

.block-header {

	// .block-header__title
	&__title {
		font-size: 20px;
	}
	

	// .block-header__title--white
	&__title--white {}

	// .block-header__title--big
	&__title--big {}
}
// HERO====================================================================================
// ========================================================================================








// MAIN====================================================================================
// ========================================================================================

